version: "3.3"
services:
  scheduler:
    image: scheduler
    volumes:
      - "~/.config/p2pfaas/scheduler:/data"
    environment:
      P2PFAAS_LOG_ENV: development
      P2PFAAS_DEV_ENV: production
    ports:
      - 18080:18080
    networks:
      - func_functions
    secrets:
      - basic-auth-user
      - basic-auth-password
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      placement:
        constraints:
          - "node.role == manager"
          - "node.platform.os == linux"

  discovery:
    image: discovery
    volumes:
      - "~/.config/p2pfaas/discovery:/data"
    environment:
      P2PFAAS_LOG_ENV: production
      P2PFAAS_DEV_ENV: production
    ports:
      - 19000:19000
    networks:
      - func_functions
    secrets:
      - basic-auth-user
      - basic-auth-password
    deploy:
      restart_policy:
        condition: any
        delay: 5s
      placement:
        constraints:
          - "node.role == manager"
          - "node.platform.os == linux"

  # mongo-express:
  #   image: mongo-express:latest
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #   networks:
  #     - func_functions
  #   deploy:
  #     placement:
  #       constraints:
  #         - "node.role == manager"
  #         - "node.platform.os == linux"
  # prometheus:
  #   image: prom/prometheus:v2.6.1
  #   configs:
  #     - source: prometheus_config
  #       target: /etc/prometheus/prometheus.yml
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #     - "--web.listen-address=:19090"
  #   #   - '-storage.local.path=/prometheus'
  #   ports:
  #     - 19090:19090
  #   networks:
  #     - func_functions
  #   deploy:
  #     placement:
  #       constraints:
  #         - "node.role == manager"
  #         - "node.platform.os == linux"
  #     resources:
  #       limits:
  #         memory: 500M
  #       reservations:
  #         memory: 200M

networks:
  func_functions:
    external: true

secrets:
  basic-auth-user:
    external: true
  basic-auth-password:
    external: true
# configs:
#   prometheus_config:
#     file: ./prometheus/prometheus.yml
